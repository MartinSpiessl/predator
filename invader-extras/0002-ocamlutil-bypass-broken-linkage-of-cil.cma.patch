From c0342af3a97b8e39b6db934a99fa4ad8d163bd71 Mon Sep 17 00:00:00 2001
From: Kamil Dudka <kdudka@redhat.com>
Date: Sun, 1 Nov 2009 11:54:39 +0100
Subject: [PATCH 2/6] ocamlutil: bypass broken linkage of cil.cma

---
 sources/cil/ocamlutil/stats.ml |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/sources/cil/ocamlutil/stats.ml b/sources/cil/ocamlutil/stats.ml
index 8bbb7d0..663b8b1 100644
--- a/sources/cil/ocamlutil/stats.ml
+++ b/sources/cil/ocamlutil/stats.ml
@@ -1,16 +1,16 @@
 (* The following functions are implemented in perfcount.c *) 
 
 (* Returns true is we have the performance counters *)
-external has_performance_counters: unit -> bool = "has_performance_counters"
+let has_performance_counters: unit -> bool = fun() -> false
 
 (* Returns number of seconds since the first read *)
-external read_pentium_perfcount : unit -> float = "read_pentium_perfcount"
+let read_pentium_perfcount : unit -> float = fun() -> 1.0
 
 (* Returns current cycle counter, divided by 1^20, and truncated to 30 bits *)
-external sample_pentium_perfcount_20 : unit -> int = "sample_pentium_perfcount_20"
+let sample_pentium_perfcount_20 : unit -> int = fun() -> 1
 
 (* Returns current cycle counter, divided by 1^10, and truncated to 30 bits *)
-external sample_pentium_perfcount_10 : unit -> int = "sample_pentium_perfcount_10"
+let sample_pentium_perfcount_10 : unit -> int = fun() -> 1
 
 
 (* Whether to use the performance counters (on Pentium only) *)
-- 
1.6.5.rc1

