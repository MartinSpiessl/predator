#!/bin/bash
if test -z "$1" || test ! -e "$1"; then
    echo Usage: $0 foo.c
    exit 1
fi

self="`readlink -f "$0"`"
topdir="`dirname "$self"`/.."

# basic setup
CL_DIR="$topdir/cl"
FA_DIR="$topdir/fa"
FA_BUILD="$topdir/fa_build"
FA_PLUG="$FA_BUILD/libfa.so"
CC1='@CC1_HOST@'

# attempt to make
make -C "$CL_DIR" -s -j5 'CMAKE=cmake -D USE_INT3_AS_BRK=ON -D CL_DEBUG=ON' \
    || exit 1
make -C "$FA_DIR" -s -j5 'CMAKE=cmake -D USE_INT3_AS_BRK=ON -D FA_DEBUG=ON' \
    || exit 1
test -x "$FA_PLUG" \
    || exit 1

# use gdb by default
test -z "$GDB" && GDB=gdb

# use verbose level 1 by default
test -z "$FA_VERBOSE" && FA_VERBOSE=1

# use pp code listener by default
test -z "$FA_OPTS" && FA_OPTS="-fplugin-arg-libfa-dump-pp \
  -fplugin-arg-libfa-dump-types"

# Box database
BOXDB=""
if [ "$2" != "" ]; then
    BOXDB="-fplugin-arg-libfa-args=db-root:$2"
fi

# prepare the command line
RUN="LD_PRELOAD=/lib/x86_64-linux-gnu/libpthread.so.0 \
    $GDB --quiet --args $CC1 \"$1\" \
    -I$topdir/include/predator-builtins -DFORESTER \
    -dumpbase test.c -quiet -o /dev/null \
    -m32 -O0 -Wall -Wextra \
    -fplugin=$FA_PLUG \
    -fplugin-arg-libfa-verbose=$FA_VERBOSE \
    $FA_OPTS"

RUN="`printf "$RUN" | tr --squeeze-repeats ' '`"
printf "\n\n%s\n\n" "$RUN"
eval "$RUN"
