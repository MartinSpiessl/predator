
TODO+inspirace pro  separation-logic

2-level refcounts

BINARY: abstract code, tables, call graph, dependencies,
        library functions + annotations

NONDETERMINISM: copy on write?

clean interfaces!

variables: id, type
sh: equations, neq, predicates
predicates: ls, points-to, ... ,  struct(type,number,names,types)
precondition: list of sh (possibilities)

line: num, cmd, precondition, next1[, next2]

operations: infer, reduce, abstract, .......

input: program+annotations

algorithm:
start with precondition?
repeat
for each line
    evaluate, try all possible ways next
    reduce
until fixpoint

problems:
 reduce: graph equivalence

=============================================================

code data:

  var T *x;  // type T*

  x := y;
  x := [y];
  [x] := y;
  new x;
  delete x;

  if
  while

=============================================================
